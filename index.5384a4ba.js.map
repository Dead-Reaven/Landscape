{"mappings":"ACSA,SAAS,aAAA,CAAc,kBAAkB,gBAAA,CAAiB,QATrC,KACpB,IAAM,EAAO,SAAS,aAAA,CAAc,QACpC,CAAA,EAAK,KAAA,CAAM,OAAA,CAAU,AAAuB,SAAvB,EAAK,KAAA,CAAM,OAAA,CAAqB,GAAK,OAE1D,IAAM,EAAkB,SAAS,aAAA,CAAc,qBAC3C,AAAsB,CAAA,QAAtB,EAAK,KAAA,CAAM,OAAA,CAAmB,EAAgB,KAAA,CAAM,OAAA,CAAU,OAC7D,EAAgB,eAAA,CAAgB,QACtC,GAMA,MAAM,EAAa,AAAC,IACnB,IAAM,EAAU,EAAK,aAAA,CAAc,iBACnC,EAAQ,SAAA,CAAU,GAAA,CAAI,gBACtB,EAAQ,SAAA,CAAU,MAAA,CAAO,gBAC1B,EACM,EAAc,AAAC,IACpB,IAAM,EAAU,EAAK,aAAA,CAAc,iBACnC,EAAQ,SAAA,CAAU,GAAA,CAAI,iBACtB,EAAQ,SAAA,CAAU,MAAA,CAAO,eAC1B,EAGM,EAAe,SAAS,gBAAA,CAAiB,iBAG/C,IAAI,EAAW,CAAY,CAAC,EAAE,CAC9B,EAAW,GAEX,EAAa,OAAA,CAAQ,CAAC,EAAM,KAC3B,EAAK,gBAAA,CAAiB,QAAS,KAC9B,GAAI,IAAS,EAAU,CAEtB,GADA,EAAY,GACR,OAAO,UAAA,EAAc,KAAM,CAE9B,IAAM,EAAS,EAAK,UAApB,CAGA,EAAO,YAAA,CAAa,EAAM,GAC1B,EAAO,YAAA,CAAa,EAAU,EAC/B,CAGA,EADA,EAAW,EAEZ,CACD,EACD","sources":["<anon>","src/js/index.js"],"sourcesContent":["const toggleBurger = ()=>{\n    const menu = document.querySelector(\"#menu\");\n    menu.style.display = menu.style.display === \"flex\" ? \"\" : \"flex\";\n    const headerTopButton = document.querySelector(\"#header-top-button\");\n    if (menu.style.display == \"flex\") headerTopButton.style.display = \"none\";\n    else headerTopButton.removeAttribute(\"style\");\n};\ndocument.querySelector(\"#burger-button\").addEventListener(\"click\", toggleBurger);\n//!!! service cards\n// Function to toggle the service card's state\nconst toggleOpen = (card)=>{\n    const content = card.querySelector(\"#card-content\");\n    content.classList.add(\"animate-open\");\n    content.classList.remove(\"animate-close\");\n};\nconst toggleClose = (card)=>{\n    const content = card.querySelector(\"#card-content\");\n    content.classList.add(\"animate-close\");\n    content.classList.remove(\"animate-open\");\n};\n// Get all service cards\nconst serviceCards = document.querySelectorAll(\".service-card\");\n// Add click event listeners to each service card\nlet expanded = serviceCards[3];\ntoggleOpen(expanded);\nserviceCards.forEach((card, idx)=>{\n    card.addEventListener(\"click\", ()=>{\n        if (card !== expanded) {\n            toggleClose(expanded);\n            if (window.innerWidth >= 1280) {\n                // Get the common parent node (assuming cards are direct children of the same parent)\n                const parent = card.parentNode;\n                // Swap the positions of the cards using insertBefore\n                parent.insertBefore(card, expanded);\n                parent.insertBefore(expanded, card);\n            }\n            // Update the expanded card reference\n            expanded = card;\n            toggleOpen(expanded);\n        }\n    });\n});\n\n//# sourceMappingURL=index.5384a4ba.js.map\n","const toggleBurger = () => {\r\n\tconst menu = document.querySelector('#menu')\r\n\tmenu.style.display = menu.style.display === 'flex' ? '' : 'flex'\r\n\r\n\tconst headerTopButton = document.querySelector('#header-top-button')\r\n\tif (menu.style.display == 'flex') headerTopButton.style.display = 'none'\r\n\telse headerTopButton.removeAttribute('style')\r\n}\r\n\r\ndocument.querySelector('#burger-button').addEventListener('click', toggleBurger)\r\n\r\n//!!! service cards\r\n// Function to toggle the service card's state\r\nconst toggleOpen = (card) => {\r\n\tconst content = card.querySelector('#card-content')\r\n\tcontent.classList.add('animate-open')\r\n\tcontent.classList.remove('animate-close')\r\n}\r\nconst toggleClose = (card) => {\r\n\tconst content = card.querySelector('#card-content')\r\n\tcontent.classList.add('animate-close')\r\n\tcontent.classList.remove('animate-open')\r\n}\r\n\r\n// Get all service cards\r\nconst serviceCards = document.querySelectorAll('.service-card')\r\n\r\n// Add click event listeners to each service card\r\nlet expanded = serviceCards[3]\r\ntoggleOpen(expanded)\r\n\r\nserviceCards.forEach((card, idx) => {\r\n\tcard.addEventListener('click', () => {\r\n\t\tif (card !== expanded) {\r\n\t\t\ttoggleClose(expanded)\r\n\t\t\tif (window.innerWidth >= 1280) {\r\n\t\t\t\t// Get the common parent node (assuming cards are direct children of the same parent)\r\n\t\t\t\tconst parent = card.parentNode\r\n\r\n\t\t\t\t// Swap the positions of the cards using insertBefore\r\n\t\t\t\tparent.insertBefore(card, expanded)\r\n\t\t\t\tparent.insertBefore(expanded, card)\r\n\t\t\t}\r\n\t\t\t// Update the expanded card reference\r\n\t\t\texpanded = card\r\n\t\t\ttoggleOpen(expanded)\r\n\t\t}\r\n\t})\r\n})\r\n"],"names":["document","querySelector","addEventListener","menu","style","display","headerTopButton","removeAttribute","toggleOpen","card","content","classList","add","remove","toggleClose","serviceCards","querySelectorAll","expanded","forEach","idx","window","innerWidth","parent","parentNode","insertBefore"],"version":3,"file":"index.5384a4ba.js.map"}